[package]
name = "redline-core"
version = "0.1.0"
edition = "2024"
authors = ["Parth Patel <parthspatel.nj@gmail.com>"]
license = ""
description = "A comprehensive text diffing library with extensible normalization and tokenization"
repository = "https://github.com/parthspatel/redline"
keywords = ["diff", "text", "nlp", "tokenization", "normalization"]
categories = ["text-processing", "algorithms"]

[lib]
name = "redline_core"
path = "src/lib.rs"

[[example]]
name = "basic_usage"
path = "examples/basic_usage.rs"

[[example]]
name = "advanced_pipeline"
path = "examples/advanced_pipeline.rs"

[[example]]
name = "analyzers_demo"
path = "examples/analyzers_demo.rs"

[[example]]
name = "spacy_syntactic_demo"
path = "examples/spacy_syntactic_demo.rs"
required-features = ["spacy"]

[[example]]
name = "bert_offline_online"
path = "examples/bert_offline_online.rs"

[dependencies]
# For Unicode normalization (accents removal)
unicode-normalization = "0.1"

# For BERT-based semantic analysis (optional, feature-gated)
rust-bert = { version = "0.23.0", optional = true }
tch = { version = "0.17.0", optional = true }
console = { version = "0.16", features = ["std"], optional = true }

# For statistical analysis (threshold learning)
ndarray = { version = "0.16.1", optional = true }
linfa = { version = "0.8.0", optional = true }
linfa-clustering = { version = "0.8.0", optional = true }

# For SpaCy integration (POS tagging, dependency parsing)
pyo3 = { version = "0.22", features = ["auto-initialize"], optional = true }

# For serialization of learned parameters
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"


[features]
default = ["full"]
bert = ["rust-bert", "tch", "ndarray", "console"]
sklearn = ["ndarray", "linfa", "linfa-clustering"]
spacy = ["pyo3"]
full = ["sklearn", "spacy", "bert"]

[dev-dependencies]
# For testing
criterion = "0.7.0"
